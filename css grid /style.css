/* 
    root elements in css
    css combinators
    grid system
*/
:root{
    --rounded: 14px;
    --lightgray: lightgray;
}

body{
    margin: 0;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}
.card{
    width: 270px;
    border: 1px solid var(--lightgray);
    border-radius: var(--rounded);
    padding: 10px;
    margin: 60px auto;
}
/* decendent selector */
/* .card img{
    border-radius: var(--rounded);
    width: 50%;
} */

/* child selector */
/* .card > img{
    width: 50%;
    border-radius: var(--rounded);
} */
div + p{
    color: red;
}

.todo{
    background-color: rgba(255, 188, 30, 0.065);
    width: 400px;
    margin: 100px auto;
    padding: 10px;
    display: flex;
    align-items: center;
    gap: 8px;
    border: 1px solid rgba(255, 184, 30, 0.361);
    border-radius: var(--rounded);
}


p{
    transition: .3s;
    text-decoration: none;
}
.checkbox:checked + p{
    text-decoration: line-through;
}
/* combinators is used to select elemtns on basis of specific conditions */



/* grid system */
.parent{
    width: 90vw;
    margin: auto;
    height: 100vh;
    /* background-color: lightgray; */
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 10px;
    /* grid-template-rows: 50%; */
    justify-content: space-evenly;
    /* align-items: center; */
}
.child{
   
}
.child img{
    width: 100%;
    border-radius: var(--rounded);
}